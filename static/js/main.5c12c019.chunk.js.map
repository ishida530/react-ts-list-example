{"version":3,"sources":["components/List.tsx","components/AddToList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["List","people","map","person","className","src","url","alt","name","age","note","AddToList","setPeople","useState","input","setInput","handleChange","e","target","value","onChange","type","placeholder","onClick","parseInt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NA2BeA,EAxBgB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAiB9B,OACI,6BAfOA,EAAOC,KAAI,SAACC,GACf,OACI,qBAAIC,UAAU,OAAd,UACI,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,WAAWC,IAAKF,EAAOG,IAAKC,IAAI,KAC/C,6BAAKJ,EAAOK,UAEhB,8BAAIL,EAAOM,IAAX,gBACA,mBAAGL,UAAU,YAAb,SAA0BD,EAAOO,gB,qBCgDtCC,EAlDqB,SAAC,GAA2B,IAAzBV,EAAwB,EAAxBA,OAAQW,EAAgB,EAAhBA,UAE3C,EAA0BC,mBAAS,CAC/BL,KAAM,GACNC,IAAK,GACLH,IAAK,GACLI,KAAM,KAJV,mBAAOI,EAAP,KAAcC,EAAd,KAOMC,EAAe,SAACC,GAClBF,EAAS,2BACFD,GADC,kBAEHG,EAAEC,OAAOV,KAAOS,EAAEC,OAAOC,UA0BlC,OACI,sBAAKf,UAAU,YAAf,UACI,uBAAOI,KAAK,OAAOY,SAAUJ,EAAcK,KAAK,OAAOC,YAAY,OAAOlB,UAAU,kBAAkBe,MAAOL,EAAMN,OACnH,uBAAOA,KAAK,MAAMY,SAAUJ,EAAcK,KAAK,SAASC,YAAY,MAAMlB,UAAU,kBAAkBe,MAAOL,EAAML,MACnH,uBAAOD,KAAK,MAAMY,SAAUJ,EAAcK,KAAK,OAAOC,YAAY,MAAMlB,UAAU,kBAAkBe,MAAOL,EAAMR,MACjH,0BAAUc,SAAUJ,EAAcR,KAAK,OAAOc,YAAY,OAAOlB,UAAU,kBAAkBe,MAAOL,EAAMJ,OAC1G,wBAAQa,QA7BI,WAEXT,EAAMN,MACNM,EAAML,KACNK,EAAMR,MAGXM,EAAU,GAAD,mBACDX,GADC,CAEL,CACIO,KAAMM,EAAMN,KACZC,IAAKe,SAASV,EAAML,KACpBH,IAAKQ,EAAMR,IACXI,KAAKI,EAAMJ,SAGfK,EAAS,CACLP,KAAM,GACNC,IAAK,GACLH,IAAK,GACLI,KAAM,OASoBN,UAAU,gBAAxC,6BCpBGqB,MAtBf,WAGE,MAA4BZ,mBAA2B,CACrD,CACEL,KAAM,eACNF,IAAK,uEACLG,IAAK,GACLC,KAAM,uBALV,mBAAOT,EAAP,KAAeW,EAAf,KAUA,OACE,sBAAKR,UAAU,MAAf,UACE,4DACA,cAAC,EAAD,CAAMH,OAAQA,IACd,cAAC,EAAD,CAAWA,OAAQA,EAAQW,UAAWA,QCjB7Bc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5c12c019.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport {IState as IProps} from '../App'\r\n\r\nconst List: React.FC<IProps> = ({ people }) => {\r\n\r\n    const renderList = () => {\r\n        return people.map((person) => {\r\n            return (\r\n                <li className=\"List\">\r\n                    <div className=\"List-header\">\r\n                        <img className=\"List-img\" src={person.url} alt=\"\" />\r\n                        <h2>{person.name}</h2>\r\n                    </div>\r\n                    <p>{person.age} years old</p>\r\n                    <p className=\"List-note\">{person.note}</p>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ul>\r\n            {renderList()}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List","import React, { useState } from 'react';\r\nimport { IState as Props } from '../App'\r\n\r\ninterface IProps {\r\n    people: Props['people']\r\n    setPeople: React.Dispatch<React.SetStateAction<{\r\n        name: string;\r\n        age: number;\r\n        url: string;\r\n        note?: string | undefined;\r\n    }[]>>\r\n}\r\nconst AddToList: React.FC<IProps> = ({ people, setPeople }) => {\r\n\r\n    const [input, setInput] = useState({\r\n        name: \"\",\r\n        age: \"\",\r\n        url: \"\",\r\n        note: \"\",\r\n    })\r\n\r\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>): void => {\r\n        setInput({\r\n            ...input,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const handleClick = (): void => {\r\n        if (\r\n            !input.name ||\r\n            !input.age ||\r\n            !input.url) {\r\n            return\r\n        }\r\n        setPeople(\r\n            [...people,\r\n            {\r\n                name: input.name,\r\n                age: parseInt(input.age),\r\n                url: input.url,\r\n                note:input.note\r\n\r\n            }])\r\n            setInput({\r\n                name: \"\",\r\n                age: \"\",\r\n                url: \"\",\r\n                note: \"\",\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"AddToList\">\r\n            <input name=\"name\" onChange={handleChange} type=\"text\" placeholder=\"name\" className=\"AddToList-input\" value={input.name} />\r\n            <input name=\"age\" onChange={handleChange} type=\"number\" placeholder=\"age\" className=\"AddToList-input\" value={input.age} />\r\n            <input name=\"url\" onChange={handleChange} type=\"text\" placeholder=\"url\" className=\"AddToList-input\" value={input.url} />\r\n            <textarea onChange={handleChange} name=\"note\" placeholder=\"note\" className=\"AddToList-input\" value={input.note} />\r\n            <button onClick={handleClick} className=\"AddToList-btn\">Add to list</button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AddToList","import React, { useState } from 'react';\nimport './App.css';\n\nimport List from './components/List';\nimport AddToList from \"./components/AddToList\"\nexport interface IState {\n  people: {\n    name: string,\n    age: number,\n    url: string,\n    note?: string,\n  }[]\n}\n\nfunction App() {\n\n\n  const [people, setPeople] = useState<IState[\"people\"]>([\n    {\n      name: \"Lebron James\",\n      url: \"https://probasket.pl/wp-content/uploads/2020/10/maxresdefault-27.jpg\",\n      age: 36,\n      note: \"alegric somesdsds\"\n    }\n  ])\n\n\n  return (\n    <div className=\"App\">\n      <h1>People invited yo my party</h1>\n      <List people={people} />\n      <AddToList people={people} setPeople={setPeople} />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}